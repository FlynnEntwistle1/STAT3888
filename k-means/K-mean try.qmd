---
title: "k-means try"
format: html
editor: visual
---

```{r}
load("../data/tech_data.Rdata")
```

```{r}
library(ggplot2)
library(caret)
library(dplyr)
library(tidyr)
```

Number for K

```{r}

# 1. Load data and filter numeric variables
tech_food_numeric <- tech_food[, sapply(tech_food, is.numeric)]

# 2. Remove rows containing NA
tech_food_numeric_clean <- tech_food_numeric[complete.cases(tech_food_numeric), ]

# 3. Remove rows with a value of 0 from all variables
tech_food_numeric_clean <- tech_food_numeric_clean[rowSums(tech_food_numeric_clean == 0) != ncol(tech_food_numeric_clean), ]

# 4. Delete columns with a single value that are meaningless to clustering
tech_food_numeric_clean <- tech_food_numeric_clean[, apply(tech_food_numeric_clean, 2, function(x) length(unique(x)) > 1)]

# 5. Standardized data
scaled_data <- scale(tech_food_numeric_clean)

# 6. Use the Elbow method to select the appropriate number of clusters
wss <- (nrow(scaled_data)-1)*sum(apply(scaled_data, 2, var))
for (i in 2:15) wss[i] <- sum(kmeans(scaled_data, centers=i)$tot.withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters", ylab="Within groups sum of squares")

```

K could be 3.

Data preparation

```{r}
# Remove any rows with NA values
tech_food_numeric_clean <- na.omit(tech_food_numeric_clean)

# Scale the data to standardize
scaled_data <- scale(tech_food_numeric_clean)

# Take a random sample of 10,000 observations from the dataset
set.seed(123)
sample_data <- scaled_data[sample(1:nrow(scaled_data), 10000), ]
correlation_matrix <- cor(scaled_data)
highly_correlated <- findCorrelation(correlation_matrix, cutoff = 0.9)
reduced_data <- scaled_data[, -highly_correlated]
mahalanobis_distances <- mahalanobis(reduced_data, colMeans(reduced_data), cov(reduced_data))
threshold <- quantile(mahalanobis_distances, 0.99)
outliers <- which(mahalanobis_distances > threshold)
cleaned_data <- reduced_data[-outliers, ]
```

k-means

```{r}
kmeans_result <- kmeans(cleaned_data, centers = 3, nstart = 10)
pca_result <- prcomp(cleaned_data, center = TRUE, scale. = TRUE)
pca_data <- as.data.frame(pca_result$x[, 1:2])
pca_data$cluster <- as.factor(kmeans_result$cluster)
ggplot(pca_data, aes(x = PC1, y = PC2, color = cluster)) +
  geom_point(alpha = 0.5) +
  labs(title = "K-means Clustering with Outliers Removed (k=3)") +
  theme_minimal()

```

```{r}
# Summarise the features of each cluster
data_with_clusters <- data.frame(cleaned_data, cluster = kmeans_result$cluster)

cluster_summary <- data_with_clusters %>%
  group_by(cluster) %>%
  summarise(across(everything(), list(mean = mean, sd = sd, median = median)))
  
print(cluster_summary)

```

```{r}


cluster_summary_long <- cluster_summary %>%
  pivot_longer(
    cols = -cluster,
    names_to = c("feature", "statistic"),
    names_sep = "_"
  ) %>%
  filter(statistic == "mean") # Mean here, can be changed

cluster_summary_wide <- cluster_summary_long %>%
  select(-statistic) %>%        
  pivot_wider(
    names_from = cluster,        
    values_from = value,         
    names_prefix = "Cluster_"    
  )

print(cluster_summary_wide)


```
