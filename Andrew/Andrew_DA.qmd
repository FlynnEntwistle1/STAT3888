---
title: "Andrew_DominanceAnalysis"
format: html
editor: visual
---

# Modelling for report

```{r}
#| message: false
library(tidyverse)
load('../data/tech_data.Rdata')
```

```{r}
# The 2 here is for the PCA results and the patient IDs for the people who I've filtered for not hypertensive and not on a diet
wide_adults_food_servings_foods_grouped = readRDS("../PCA/wide_adults_food_servings_foods_grouped.rds")
load("../PCA/PCA_results.RData")
num_PCs = 3
pca_w_ids <- data.frame(ABSPID = wide_adults_food_servings_foods_grouped$ABSPID, pca_result$x[,1:num_PCs])
```

## Merging PCA data with `tech_biom`, and energy data from `tech_nutr`.

> Note: `ord_fact_biom` is just a minimally cleaned and renamed version of `tech_nutr`. Any variables where '0' or '99' etc. means NA have been appropriately transformed into NA.

```{r}
# Load the data
ord_fact_biom <- readRDS("../PCA/Flynn/ord_fact_biom.rds")

# Modify relevant_biom to include EXLTOTMV calculation
relevant_biom <- ord_fact_biom |>
  mutate(HYPBC = case_when(
    HYPBC == 5 ~ "Never told had HYPBC",
    HYPBC %in% c(1, 2) ~ "Current HYPBC",
    TRUE ~ "Previously had HYPBC"
  ), 
  EXLTOTMV = EXLWMBC + (2*EXLWVBC)
)

# Create the energ_dat dataset with the relevant energy variables
energ_dat <- tech_nutr |>
  dplyr::select(ABSPID, ENERGYT1, ENERGYT2, SODIUMT1, SODIUMT2, CHOLT1, CHOLT2) |>
  group_by(ABSPID) |>
  mutate(ENERGTOT = ENERGYT1 + ENERGYT2,
         SODIUMTOT = SODIUMT1 + SODIUMT2,
         CHOLTOT = CHOLT1 + CHOLT2) |>
  dplyr::select(-c(ENERGYT1, ENERGYT2, SODIUMT1, SODIUMT2, CHOLT1, CHOLT2))

# Merge datasets and include EXLTOTMV in full_mod_PCA_dat
full_mod_PCA_dat <- pca_w_ids |>
  left_join(relevant_biom, by = "ABSPID") |>
  left_join(energ_dat, by = "ABSPID") |>
  dplyr::select(-ends_with("_MISS")) |>
  dplyr::select(ABSPID, PC1, PC2, PC3, SYSTOL, DIASTOL, HYPBC, EXLTOTMV, ENERGTOT, SF2SA1QN, SMKSTAT, SEX, DIETQ12, DIETQ14, BMISC, AGEC, ADTOTSE, PHDCMWBC, SLPTIME, ADTOTSE, CHOLTOT, SODIUMTOT, CHOLNTR)

# Filter and create systol_lm_dat, making sure EXLTOTMV is included
systol_lm_dat <- full_mod_PCA_dat |>
  filter(!is.na(SYSTOL)) |>
  dplyr::select(-HYPBC, -DIASTOL)

```

## Multiple Linear Regression and Relative Importance (Andrew)

```{r}
library(car)
library(dplyr)
library(broom)

analyze_model_diagnostics <- function(model) {
  # Calculate VIF for multicollinearity
  vif_values <- vif(model)
  
  # Create residual plot
  p <- ggplot(data.frame(Fitted = model$fitted.values, Residuals = residuals(model)),
              aes(x = Fitted, y = Residuals)) +
    geom_point() +
    geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
    labs(title = "Residual Plot", x = "Fitted Values", y = "Residuals")
  
  # Return VIF values and plot
  list(vif = vif_values, plot = p)
}

```


### Model 1. (PCs + Energy Total)

```{r}

# ABSPID, PC1, PC2, PC3, SYSTOL, DIASTOL, HYPBC, starts_with("EXL"), ENERGTOT, SF2SA1QN, SMKSTAT, SEX, DIETQ12, DIETQ14, BMISC, AGEC, ADTOTSE, PHDCMWBC, SLPTIME, ADTOTSE, BMISC, CHOLNTR

test_dat1 <- systol_lm_dat |> 
  select(-ABSPID, -SF2SA1QN) |> 
  filter(SMKSTAT == 1 | SMKSTAT == 4 | SMKSTAT == 5) |>
  select(SYSTOL, PC1, PC2, PC3, ENERGTOT) |>
  na.omit()

model1 <- lm(SYSTOL~PC1 + PC2 + PC3 + ENERGTOT, data= test_dat1)

analyze_model_diagnostics(model1)
summary(model1)
```


## Model 2 (PCs + Extra Nutrition Info)

```{r}
test_dat2 <- systol_lm_dat |> 
  select(-ABSPID, -SF2SA1QN)|> 
  select(SYSTOL, PC1, PC2, PC3, ENERGTOT, CHOLTOT, SODIUMTOT) |>
  na.omit() 

model2 <- lm(SYSTOL~PC1 + PC2 + PC3 + ENERGTOT + CHOLTOT + SODIUMTOT, data= test_dat2)

analyze_model_diagnostics(model2)
summary(model2)
```
### Model 3 (PCs + Extra Nutrition Information + Demographic)

```{r}
test_dat3 <- systol_lm_dat |> 
  select(-ABSPID, -SF2SA1QN) |> 
  filter(SMKSTAT == 1 | SMKSTAT == 4 | SMKSTAT == 5) |>
  mutate(
    SEX = factor(ifelse(SEX == 1, "Male", "Female")),
    SMKSTAT = relevel(factor(SMKSTAT), ref = "5"),
  ) |> 
  select(SYSTOL, PC1, PC2, PC3, ENERGTOT, CHOLTOT, SODIUMTOT, AGEC, PHDCMWBC, SEX, SMKSTAT, EXLTOTMV, ADTOTSE, SLPTIME) |>
  na.omit() |>
  mutate(
    SMKSTAT = relevel(SMKSTAT, ref = "5"),
    SEX = relevel(SEX, ref = "Female")
  )

model3 <- lm(SYSTOL~PC1 + PC2 + PC3 + ENERGTOT + CHOLTOT + SODIUMTOT + AGEC + PHDCMWBC + SEX + SMKSTAT + EXLTOTMV + ADTOTSE + SLPTIME, data= test_dat3)

analyze_model_diagnostics(model3)
summary(model3)
```
### Model 4 (Age grouped models + Model 3)

```{r}

# test_dat4 <- systol_lm_dat |> 
#   select(-ABSPID, -SF2SA1QN) |> 
#   filter(SMKSTAT == 1 | SMKSTAT == 4 | SMKSTAT == 5) |>
#   mutate(
#     SEX = factor(ifelse(SEX == 1, "Male", "Female")),
#     SMKSTAT = relevel(factor(SMKSTAT), ref = "5"),
#     
#     # Using the risk stratification for cardiovascular disease studies
#     AGE_GROUP_CVD_RISK = cut(AGEC, 
#                              breaks = c(45, 54, 64, 74, 84, Inf), 
#                              labels = c("45-54", "55-64", "65-74", "75-84", "85+"), 
#                              right = TRUE),
# 
#     # Using the standard age groupings starting at 45
#     AGE_GROUP_STANDARD = cut(AGEC, 
#                              breaks = c(45, 54, 64, 74, 84, 94, Inf), 
#                              labels = c("45-54", "55-64", "65-74", "75-84", "85-94", "95+"), 
#                              right = TRUE)
#   ) |> 
#   select(SYSTOL, PC1, PC2, PC3, ENERGTOT, CHOLTOT, SODIUMTOT, AGEC, PHDCMWBC, SEX, SMKSTAT, EXLTOTMV, ADTOTSE, SLPTIME, AGE_GROUP_CVD_RISK, AGE_GROUP_STANDARD) |>
#   na.omit() |>
#   mutate(
#     SMKSTAT = relevel(SMKSTAT, ref = "5"),
#     SEX = relevel(SEX, ref = "Female")
#   )
# 
# models_by_age_group <- test_dat4 %>%
#   group_by(AGE_GROUP_CVD_RISK) %>%
#   do(model = lm(SYSTOL ~ PC1 + PC2 + PC3 + ENERGTOT + CHOLTOT + SODIUMTOT + SEX + PHDCMWBC + SMKSTAT + EXLTOTMV + ADTOTSE + SLPTIME, data = .))





test_dat4 <- systol_lm_dat |>
  select(-ABSPID, -SF2SA1QN) |>
  filter(SMKSTAT == 1 | SMKSTAT == 4 | SMKSTAT == 5) |>
  mutate(
    SEX = factor(ifelse(SEX == 1, "Male", "Female")),
    SMKSTAT = relevel(factor(SMKSTAT), ref = "5"),
    AGE_GROUP = cut(AGEC, breaks = c(45, 59, 74, Inf), labels = c("45-64", "60-84", "85+"), right = TRUE)
  ) |>
  select(SYSTOL, PC1, PC2, PC3, ENERGTOT, CHOLTOT, SODIUMTOT, AGEC, PHDCMWBC, SEX, SMKSTAT, EXLTOTMV, ADTOTSE, SLPTIME, AGE_GROUP) |>
  na.omit() |>
  mutate(
    SMKSTAT = relevel(SMKSTAT, ref = "5"),
    SEX = relevel(SEX, ref = "Female")
  )


models_by_age_sex_group <- test_dat4 %>%
  group_by(AGE_GROUP, SEX) %>%
  do(model = lm(SYSTOL ~ PC1 + PC2 + PC3 + ENERGTOT + CHOLTOT + SODIUMTOT + AGEC + PHDCMWBC + SMKSTAT + EXLTOTMV + ADTOTSE + SLPTIME, data = .))

model4 <- models_by_age_sex_group$model[[2]]
summary(model4)
analyze_model_diagnostics(model4)
```

## Making the plots

```{r}
# Analyze each model and store the plots
library(gridExtra)
library(knitr)
library(stargazer)

diagnostics_model1 <- analyze_model_diagnostics(model1)$plot
diagnostics_model2 <- analyze_model_diagnostics(model2)$plot
diagnostics_model3 <- analyze_model_diagnostics(model3)$plot
diagnostics_model4 <- analyze_model_diagnostics(model4)$plot

grid.arrange(diagnostics_model1, diagnostics_model2, diagnostics_model3,
             diagnostics_model4, ncol = 2)


vif_model1 <- data.frame(analyze_model_diagnostics(model1)$vif)
colnames(vif_model1) <- "VIF Values"


vif_model2 <- data.frame(analyze_model_diagnostics(model2)$vif)
colnames(vif_model2) <- "VIF Values"

vif_model3 <- data.frame(analyze_model_diagnostics(model3)$vif)
vif_model3 <- vif_model3[, 3, drop = FALSE] # Select the third column only
colnames(vif_model3) <- "VIF Values"       # Rename the column to "VIF Values"

vif_model4 <- data.frame(analyze_model_diagnostics(model4)$vif)
vif_model4 <- vif_model4[, 3, drop = FALSE] # Select the third column only
colnames(vif_model4) <- "VIF Values"       # Rename the column to "VIF Values"


kable(vif_model1, caption = "VIF for Model 1")
kable(vif_model2, caption = "VIF for Model 2")
kable(vif_model3, caption = "VIF for Model 3")
kable(vif_model4, caption = "VIF for Model 4")

```

